set nocompatible
filetype off

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" Add all your plugins here (note older versions of Vundle used Bundle instead of Plugin)
Plugin 'dracula/vim'
Plugin 'nanotech/jellybeans.vim'
"~~COLOURS ^^ ~~~~ OTHER vv ~~~
Plugin 'alvan/vim-closetag'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'fatih/vim-go'
Plugin 'elmcast/elm-vim'
Plugin 'ervandew/supertab'
Plugin 'nvie/vim-flake8'
Plugin 'scrooloose/nerdtree'

" MATLAB
function! DoRemote(arg)
  UpdateRemotePlugins
endfunction

Plugin 'daeyun/vim-matlab', { 'do': function('DoRemote') }


" All of your Plugins must be added before the following line
call vundle#end()
filetype plugin indent on

"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" STLYE FUNCTIONS

function SetTab2()
	set tabstop=2
	set softtabstop=2
	set shiftwidth=2
endfunction

"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" DEFAULT STYLE THINGS

colorscheme dracula
syntax on
highlight Normal ctermbg=None

set tabstop=4
set softtabstop=4
set shiftwidth=4

augroup HiglightTODO
    autocmd!
    autocmd WinEnter,VimEnter * :silent! call matchadd('Todo', 'TODO', -1)
augroup END


"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" GLOBAL SETTINGS
set number
set wildmenu
set foldmethod=indent
set foldlevel=99
set ttimeoutlen=5
set autoindent
set smartindent
set path+=**

augroup remember_folds
  autocmd!
  autocmd BufWinLeave * mkview
  autocmd BufWinEnter * silent! loadview
augroup END


" open files where you left them
if has("autocmd")
   au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif
" remaps
nnoremap <F5> :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar><CR>
nnoremap <F6> <C-W>w
nmap <silent> <c-k> :wincmd k<CR>
nmap <silent> <c-j> :wincmd j<CR>
nmap <silent> <c-h> :wincmd h<CR>
nmap <silent> <c-l> :wincmd l<CR>
tnoremap <F6>  <C-\><C-n><C-W>w   "may not actually be needed
nnoremap j gj
nnoremap k gk
nnoremap <space> za

" ctags
nnoremap <Leader>] <C-]>
nnoremap <Leader>[ <C-t>

" spelling related
noremap <Leader>ts :set spell!<CR>
noremap <Leader>= z=1

" search highlighting
nnoremap <silent> <Leader>l ml:execute 'match Search /\%'.line('.').'l/'<CR>

"
" Snippit commands
nnoremap <Leader>cpp :-1read $HOME/src/.skeleton.cpp<CR>4ji<TAB>
nnoremap <Leader>html :-1read $HOME/src/.skeleton.html<CR>3jwf<i
nnoremap <Leader>c :-1read $HOME/src/.skeleton.c<CR>4jli



" airline extentions
let g:airline_extensions = ['branch', 'tabline']

" ocaml 
set rtp^="/Users/thirdmeow/.opam/default/share/ocp-indent/vim"

au BufNewFile,BufRead *.cpp call SetTab2()
au BufNewFile,BufRead *.ino call SetTab2()
au BufNewFile,BufRead *.c call SetTab2()
au BufNewFile,BufRead *.h call SetTab2()
au BufNewFile,BufRead *.RSM call SetTab2()
au BufNewFile,BufRead *.R call SetTab2()

au BufNewFile,BufRead *.vue set filetype=html

